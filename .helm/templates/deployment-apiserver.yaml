apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-apiserver
  labels:
{{ include "helm.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.apiserver.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "helm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "helm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        deployment: apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "helm.name" . }}
                topologyKey: "kubernetes.io/hostname"
    {{- with .Values.apiserver.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.apiserver.image.repository }}:{{ .Values.apiserver.image.tag }}"
          imagePullPolicy: {{ .Values.apiserver.image.pullPolicy }}
          env:
            - name: INFLUX_SERVICE_URL
              value: {{ .Values.apiserver.env.INFLUX_SERVICE_URL | quote }}
            - name: INFLUX_SERVICE_PORT
              value: {{ .Values.apiserver.env.INFLUX_SERVICE_PORT | quote }}
            - name: INFLUX_DATABASE
              value: {{ .Values.apiserver.env.INFLUX_DATABASE | quote }}
            - name: INFLUX_SECRET_PATH
              value: {{ .Values.apiserver.volume.mountPathInflux | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          #          livenessProbe:
          #            httpGet:
          #              path: /
          #              port: http
#          readinessProbe:
#            httpGet:
#              path: /health
#              port: http
          volumeMounts:
            - name: influxdb-credentials
              mountPath: {{ .Values.apiserver.volume.mountPathInflux }}
            - name: influxdata
              mountPath: {{ .Values.apiserver.volume.mountPathInfluxdata }}
          securityContext:
            privileged: false
          resources:
            {{- toYaml .Values.apiserver.resources | nindent 12 }}
      volumes:
        - name: influxdb-credentials
          secret:
            secretName: {{ .Values.apiserver.secrets.influxdb }}
            items:
              - key: influxdb-user
                path: username
              - key: influxdb-password
                path: password
        - name: influxdata
          secret:
            secretName: {{ .Values.apiserver.secrets.influxdata }}
            items:
              - key: token
                path: token
              - key: org
                path: org
              - key: url
                path: url
      {{- with .Values.apiserver.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
